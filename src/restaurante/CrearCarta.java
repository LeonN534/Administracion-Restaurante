
package restaurante;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import static restaurante.Restaurante.PASSWORD;
import static restaurante.Restaurante.URL;
import static restaurante.Restaurante.USERNAME;

public class CrearCarta extends javax.swing.JFrame {
    
    DefaultTableModel model;
    Connection connection = null;

    String dia;
    public CrearCarta(String dia) {
        this.dia = dia;
        initComponents();
    }

    private CrearCarta() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(this.dia);

        jButton1.setText("CREAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("CANCELAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new Object [] {
                "ID", "Plato", "Descripcion", "Categoria", "Precio"
            })
            {
                // Hacer que la columna 3 (índice 2) no sea editable
                @Override
                public boolean isCellEditable(int row, int column) {
                    return column != 0 && column != 2 && column != 3;
                }
            }
        );
        JComboBox<String> comboBox = new JComboBox<>();
        try {
            connection = DriverManager.getConnection(URL, USERNAME, PASSWORD);
            // If no exception is thrown, the connection is successful.
            Statement statement = connection.createStatement();
            String selectQuery = "SELECT Nombre FROM Platos";
            ResultSet resultSet = statement.executeQuery(selectQuery);

            // Process the results
            while (resultSet.next()) {

                String name = resultSet.getString("Nombre"); // Replace with your column names

                comboBox.addItem(name);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        comboBox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int selectedRow = jTable1.getSelectedRow();
                int selectedColumn = jTable1.getSelectedColumn();
                try {
                    connection = DriverManager.getConnection(URL, USERNAME, PASSWORD);
                    // If no exception is thrown, the connection is successful.
                    Statement statement = connection.createStatement();
                    String selectQuery = "SELECT IdPlato, DescripcionPlato, Categoria, Precio FROM Platos WHERE Nombre = '" + comboBox.getSelectedItem() + "'";
                    ResultSet resultSet = statement.executeQuery(selectQuery);

                    if (selectedColumn == 1) {
                        jTable1.setValueAt(comboBox.getSelectedItem(), selectedRow, selectedColumn);

                        // Move the cursor to the first row in the ResultSet
                        if (resultSet.next()) {
                            jTable1.setValueAt(resultSet.getString("IdPlato"), selectedRow, 0);
                            jTable1.setValueAt(resultSet.getString("DescripcionPlato"), selectedRow, 2);
                            jTable1.setValueAt(resultSet.getString("Categoria"), selectedRow, 3);
                            jTable1.setValueAt(resultSet.getString("Precio"), selectedRow, 4);

                        }
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        });

        jTable1.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor(comboBox));
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("AÑADIR PLATO");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
                model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{"", "", "0"});
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Carta ventanaCartas = new Carta();
        ventanaCartas.setLocationRelativeTo(null);
        ventanaCartas.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // Carga el controlador JDBC
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Establece la conexión
            Connection conexion = DriverManager.getConnection(URL, USERNAME, PASSWORD);

            if (existeFila(conexion, this.dia)) {
                // Si existe, borra todas las filas con ese valor en la columna Dia
                borrarFilas(conexion, this.dia);
                insertarEnCartas(conexion, this.dia);
            } else {
                insertarEnCartas(conexion, this.dia);
            }
            

        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private boolean existeFila(Connection conexion, String valorDia) throws SQLException {
        String sql = "SELECT COUNT(*) FROM Cartas WHERE Dia = ?";
        try (PreparedStatement statement = conexion.prepareStatement(sql)) {
            statement.setString(1, valorDia);
            try (ResultSet resultSet = statement.executeQuery()) {
                resultSet.next();
                int rowCount = resultSet.getInt(1);
                return rowCount > 0;
            }
        }
    }

    // Método para borrar todas las filas con el valor de Dia indicado
    private void borrarFilas(Connection conexion, String valorDia) throws SQLException {
        String sql = "DELETE FROM Cartas WHERE Dia = ?";
        try (PreparedStatement statement = conexion.prepareStatement(sql)) {
            statement.setString(1, valorDia);
            statement.executeUpdate();
        }
    }
    
    private void insertarEnCartas(Connection conexion, String dia) throws SQLException {

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Verifica si hay al menos una fila en la JTable
        if (model.getRowCount() > 0) {
            // Prepara la consulta para la inserción en la tabla Cartas
            String sql = "INSERT INTO Cartas (Dia, idPlatos) VALUES (?, ?)";
            try (PreparedStatement statement = conexion.prepareStatement(sql)) {
                // Itera sobre las filas de la JTable
                for (int i = 0; i < model.getRowCount(); i++) {
                    // Establece los valores de los parámetros
                    statement.setString(1, dia);
                    statement.setInt(2, Integer.parseInt(String.valueOf(model.getValueAt(i, 0)))); 

                    // Ejecuta la consulta de inserción
                    statement.executeUpdate();
                }
            }
            JOptionPane.showMessageDialog(this, "Carta creada");
            this.dispose();
            Carta ventanaCartas = new Carta();
            ventanaCartas.setLocationRelativeTo(null);
            ventanaCartas.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Inserte platos a la carta");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearCarta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearCarta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearCarta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearCarta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearCarta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
